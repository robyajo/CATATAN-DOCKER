### Craeate Docker Dile
Dockerfile

### Set Dockerfile
FROM node:latest
COPY . /app
CMD [ "node", "/app/app.js" ]
EXPOSE 3000

### Execute Cmd 
docker build -t name_project:version .

### Cek image Docker Images
docker images

### Runing Project Docker Development
docker run -d -p 3009:3009 name_images:version

### Cek proses yang berjalan
docker ps

### Mematikan proses yang berjalan
docker stop name_container

### Mengapus Images
docker rmi images_id 

### Mengapus Paksa Images
docker rmi images_id -f



### Devlop With File Docker
1. Create file docker Dockerfile.dev (untuk depelopment)
    FROM node:alpine
    WORKDIR /app
    COPY package* .
    RUN npm run install
    COPY . .
    EXPOSE port
    CMD ["npm","run","dev"]

    - Setting package.json defineConfig
        server:{
            host:"0.0.0.0",
            port:3000
        },

    - execute = docker build -t name_images-dev/name_project:1.0.0 -f Dockerfile.dev .
2. Create file docker Dockerfile.stg (untuk preview)
    FROM node:alpine
    WORKDIR /app
    COPY package* .
    RUN npm run install
    COPY . .
    RUN npm run build
    EXPOSE port
    CMD ["npm","run","preview"]

    - Setting package.json defineConfig
        server:{
            host:"0.0.0.0",
            port:3000
        },
        preview:{
            port:3001
        }

    - execute = docker build -t name_images-stg/name_project:1.0.0 -f Dockerfile.stg .




    ### DOCKER WITH LARAVEL 
    1. Create Dockerfile
     FROM php:8.3.10
     RUN apt-get update -y && apt-get install -y openssl zip unzip git
     RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
     RUN apt-get update && apt-get install -y libpq-dev 
     RUN docker-php-ext-install pdo pdo_pgsql
     
     RUN php -m | grep mbstring
     WORKDIR /app
     COPY . /app
     RUN composer install
     
     CMD php artisan serve --host=0.0.0.0 --port=8000
     EXPOSE 8000

     2. Create docker-compose.yml
     version: '3.1'
        services:
          db:
            image: mariadb:10.11
            restart: always
            environment:
              MYSQL_ROOT_PASSWORD: notSecureChangeMe
        
          phpmyadmin:
            image: phpmyadmin
            restart: always
            ports:
              - 8080:80
            environment:
              - PMA_ARBITRARY=1
